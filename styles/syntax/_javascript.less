.syntax--js {
  .syntax--constant {
    &.syntax--language {
      &.syntax--boolean {
        color: @syntax-constant-color;
      }
    }

    &.syntax--other {
      &.syntax--object {
        &.syntax--key {
          color: @white;

          .syntax--string {
            color: inherit;
          }
        }
      }
    }
  }

  .syntax--entity {
    &.syntax--name {
      &.syntax--class {
        text-decoration: underline;
      }

      &.syntax--function {
        color: @syntax-function-color;
      }

      &.syntax--type {
        &.syntax--object {
          color: @syntax-reserved-color;
        }
      }
    }
  }

  .syntax--keyword {
    &.syntax--control {
      color: @white;

      &.syntax--flow {
        color: @lime;
      }

      &.syntax--module {
        color: @green;
      }
    }

    &.syntax--operator {
      color: @syntax-constant-color;

      &.syntax--accessor,
      &.syntax--arithmetic,
      &.syntax--assignment,
      &.syntax--comparison,
      &.syntax--logical,
      &.syntax--relational {
        color: @white;
      }
    }
  }

  .syntax--meta {
    &.syntax--class {
      &.syntax--extends {
        & + .syntax--entity.syntax--name.syntax--class {
          color: @green;
        }
      }
    }

    &.syntax--brace,
    &.syntax--delimiter {
      color: @white;
    }

    &.syntax--function {
      &.syntax--parameters {
        color: @red;
      }
    }
  }

  .syntax--punctuation {
    &.syntax--separator,
    &.syntax--terminator {
      color: @white;
    }
  }

  .syntax--storage {
    &.syntax--type {
      &.syntax--function {
        color: @syntax-function-color;
      }
    }
  }

  .syntax--support {
    color: @syntax-reserved-color;
  }

  .syntax--variable {
    &.syntax--other {
      &.syntax--class {
        color: @green;
        text-decoration: underline;
      }

      &.syntax--constant {
        color: @syntax-text-color;
      }
    }

    &.syntax--language {
      color: @syntax-reserved-color;
    }
  }
}
